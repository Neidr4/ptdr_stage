<?xml version="1.0"?>
<launch>

  <arg name="robot_namespace"/>
  <arg name="init_x_pos" default="0.0"/>
  <arg name="init_y_pos" default="0.0"/>
  <arg name="init_z_pos" default="0.0"/>
  <arg name="init_yaw"   default="0.0"/>

  <arg name="base"       default="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, rhoomba -->
  <arg name="stacks"     default="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons -->
  <arg name="3d_sensor"  default="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro -->

 

  <!-- ================================== -->
  <!-- =========== Robot model ========== -->
  <!-- ================================== -->
  
  <!-- include file="$(find multi_robot_stage)/launch/robot_model.launch"/ -->
  <group ns="$(arg robot_namespace)">

    <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
      <arg name="base" value="$(arg base)" />
      <arg name="stacks" value="$(arg stacks)" />
      <arg name="3d_sensor" value="$(arg 3d_sensor)" />
    </include>
    
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="use_gui" value="false"/>
    </node>


    <!-- ================================== -->
    <!-- ============ Navigation ========== -->
    <!-- ================================== -->

    <!-- include file="$(find multi_robot_stage)/launch/navigation.launch"/-->
  
    <param name="tf_prefix" value="$(arg robot_namespace)" />
    <param name="amcl/initial_pose_x" value="$(arg init_x_pos)" />
    <param name="amcl/initial_pose_y" value="$(arg init_y_pos)" />
    <!--
    <include file="$(find multi_robot_stage)/launch/move_base.launch" >     
      <arg name="robot_name" value="robot_0" />
    </include>
    -->
    <!-- node pkg="collvoid_controller" type="controllerRobots.py" name="controllerRobots" output="screen" / -->
  
    <!-- ================================== -->
    <!-- ============ Move_base =========== -->
    <!-- ================================== -->

    <arg name="urdf_file" default="$(find xacro)/xacro.py --inorder '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
    <param name="robot_description" command="$(arg urdf_file)" />

    <include file="$(find multi_robot_stage)/launch/includes/amcl_multirobot.launch.xml">
      <arg name="use_map_topic"             value="true"/>
      <arg name="global_frame_id" value="/map"/>
      <arg name="odom_frame_id"   value="$(arg robot_namespace)/odom"/>
      <arg name="base_frame_id"   value="$(arg robot_namespace)/base_footprint"/>
      <arg name="scan_topic"   value="base_scan"/>    
    </include>

    <node name="robot_pose_publisher_$(arg robot_namespace)" pkg="robot_pose_publisher" type="robot_pose_publisher" output="screen">      
      <param name="base_frame"             value="$(arg robot_namespace)/base_link"/> 
    </node>

    <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>

  </group>

</launch>